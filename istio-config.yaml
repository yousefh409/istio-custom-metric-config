apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: istio-system
spec:
  hub: docker.io/istio
  tag: 1.14.1

  # Mesh-wide setting
  meshConfig:
    defaultConfig:
      proxyMetadata: {}
      extraStatTags:
      - request_host
      - destination_host
      - destination_port
      - destination_ip
      - destination_uid 
      - destination_name 
      - source_port
      - source_ip
      - source_uid
      - source_name
      - origin_ip
      - request_path
      - request_size
      - response_size
      - response_duration
      - response_code
      - api_service
      - api_operation
    enablePrometheusMerge: true
    accessLogFile: /dev/stdout
    extensionProviders:
    # Collect traces for OpenTelemetry (Jaeger)
    - name: otel
      envoyOtelAls:
        service: otel-collector.istio-system.svc.cluster.local
        port: 4317

  # Traffic management feature
  components:
    base:
      enabled: true
    pilot:
      enabled: true

    # Istio Gateway feature
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
        service:
          ports:
            ## You can add custom gateway ports in user values overrides, but it must include those ports since helm replaces.
            # Note that AWS ELB will by default perform health checks on the first port
            # on this list. Setting this to the health check port will ensure that health
            # checks always work. https://github.com/istio/istio/issues/12503
            - port: 15021
              targetPort: 15021
              name: status-port
            - port: 80
              targetPort: 8080
              name: http2
            - port: 443
              targetPort: 8443
              name: https
            - port: 31400
              targetPort: 31400
              name: tcp
              # This is the port where sni routing happens
            - port: 15443
              targetPort: 15443
              name: tls
    egressGateways:
    - name: istio-egressgateway
      enabled: true

    # Istio CNI feature
    cni:
      enabled: false
    
    # Remote and config cluster configuration for an external istiod
    istiodRemote:
      enabled: false

  # Global values passed through to helm global.yaml.
  # Please keep this in sync with manifests/charts/global.yaml
  values:
    defaultRevision: ""
    global:
      istioNamespace: istio-system
      istiod:
        enableAnalysis: false
      logging:
        level: "default:info"
      logAsJson: false
      pilotCertProvider: istiod
      jwtPolicy: third-party-jwt
      proxy:
        image: proxyv2
        clusterDomain: "cluster.local"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        logLevel: warning
        componentLogLevel: "misc:error"
        privileged: false
        enableCoreDump: false
        statusPort: 15020
        readinessInitialDelaySeconds: 1
        readinessPeriodSeconds: 2
        readinessFailureThreshold: 30
        includeIPRanges: "*"
        excludeIPRanges: ""
        excludeOutboundPorts: ""
        excludeInboundPorts: ""
        autoInject: enabled
        tracer: "zipkin"
      proxy_init:
        image: proxyv2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 10Mi
      # Specify image pull policy if default behavior isn't desired.
      # Default behavior: latest images will be Always else IfNotPresent.
      imagePullPolicy: ""
      operatorManageWebhooks: false
      tracer:
        lightstep: {}
        zipkin: {}
        datadog: {}
        stackdriver: {}
      imagePullSecrets: []
      oneNamespace: false
      defaultNodeSelector: {}
      configValidation: true
      multiCluster:
        enabled: false
        clusterName: ""
      omitSidecarInjectorConfigMap: false
      network: ""
      defaultResources:
        requests:
          cpu: 10m
      defaultPodDisruptionBudget:
        enabled: true
      priorityClassName: ""
      useMCP: false
      sds:
        token:
          aud: istio-ca
      sts:
        servicePort: 0
      meshNetworks: {}
      mountMtlsCerts: false
    base:
      enableCRDTemplates: false
      validationURL: ""
    pilot:
      autoscaleEnabled: true
      autoscaleMin: 1
      autoscaleMax: 5
      replicaCount: 1
      image: pilot
      traceSampling: 100.0 # Note: When in production, should be 1.0
      env: {}
      cpu:
        targetAverageUtilization: 80
      nodeSelector: {}
      keepaliveMaxServerConnectionAge: 30m
      enableProtocolSniffingForOutbound: true
      enableProtocolSniffingForInbound: true
      deploymentLabels:
      podLabels: {}
      configMap: true

    telemetry:
      enabled: true
      v2:
        enabled: true
        metadataExchange:
          wasmEnabled: false
        prometheus:
          configOverride:
            inboundSidecar:
              metrics:
                - name: requests_total
                  dimensions:
                    request_host: request.host
                    destination_host: destination.service.host
                    destination_port: string(destination.port)
                    destination_ip: string(destination.ip)
                    destination_uid: destination.uid
                    destination_name: destination.name
                    source_port: string(source.port)
                    source_ip: string(source.ip)
                    source_uid: source.uid
                    source_name: source.name
                    origin_ip: string(origin.ip)
                    request_path: request.path
                    request_size: string(request.size)
                    response_size: string(response.size)
                    response_duration: string(response.duration)
                    response_code: string(response.code)
                    api_service: api.service
                    api_operation: api.operation
            outboundSidecar:
              metrics:
                - name: requests_total
                  dimensions:
                    request_host: request.host
                    destination_host: destination.service.host
                    destination_port: string(destination.port)
                    destination_ip: string(destination.ip)
                    destination_uid: destination.uid
                    destination_name: destination.name
                    source_port: string(source.port)
                    source_ip: string(source.ip)
                    source_uid: source.uid
                    source_name: source.name
                    origin_ip: string(origin.ip)
                    request_path: request.path
                    request_size: string(request.size)
                    response_size: string(response.size)
                    response_duration: string(response.duration)
                    response_code: string(response.code)
                    api_service: api.service
                    api_operation: api.operation
            gateway:
              metrics:
                - name: requests_total
                  dimensions:		                
                    request_host: request.host
                    destination_host: destination.service.host
                    destination_port: string(destination.port)
                    destination_ip: string(destination.ip)
                    destination_uid: destination.uid
                    destination_name: destination.name
                    source_port: string(source.port)
                    source_ip: string(source.ip)
                    source_uid: source.uid
                    source_name: source.name
                    origin_ip: string(origin.ip)
                    request_path: request.path
                    request_size: string(request.size)
                    response_size: string(response.size)
                    response_duration: string(response.duration)
                    response_code: string(response.code)
                    api_service: api.service
                    api_operation: api.operation
          wasmEnabled: false
          enabled: true
        stackdriver:
          enabled: false
          logging: false
          monitoring: false
          topology: false
          configOverride: {}

    istiodRemote:
      injectionURL: ""
      
    gateways:
      istio-egressgateway:
        autoscaleEnabled: true
        # type: ClusterIP
        # name: istio-egressgateway
        # env: {}
        # secretVolumes:
        #   - name: egressgateway-certs
        #     secretName: istio-egressgateway-certs
        #     mountPath: /etc/istio/egressgateway-certs
        #   - name: egressgateway-ca-certs
        #     secretName: istio-egressgateway-ca-certs
        #     mountPath: /etc/istio/egressgateway-ca-certs

      istio-ingressgateway:
        autoscaleEnabled: true
        # type: LoadBalancer
        # name: istio-ingressgateway
        # env: {}
        # secretVolumes:
        #   - name: ingressgateway-certs
        #     secretName: istio-ingressgateway-certs
        #     mountPath: /etc/istio/ingressgateway-certs
        #   - name: ingressgateway-ca-certs
        #     secretName: istio-ingressgateway-ca-certs
        #     mountPath: /etc/istio/ingressgateway-ca-certs
